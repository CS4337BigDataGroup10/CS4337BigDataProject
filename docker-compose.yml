services:
  # Eureka Server (No database)
  eureka-server:
    image: eureka-server
    container_name: EurekaServer
    build:
      context: ./Microservices/EurekaServer
    networks:
      - net
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_NAME: eureka-server
      SERVER_PORT: 8761
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: false
      EUREKA_CLIENT_FETCH_REGISTRY: false

  # Authentication Service
  auth-db:
    image: mysql:latest
    container_name: AuthServiceDB
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: AuthServiceDB
    volumes:
      - './Microservices/AuthenticationService/Database:/docker-entrypoint-initdb.d'
    networks:
      - net
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 5
      timeout: 2s

  auth-service:
    image: auth-service
    container_name: AuthService
    build:
      context: ./Microservices/AuthenticationService
    env_file:
      - .env
    depends_on:
      auth-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - net
    ports:
      - "8081:8081"
    environment:
      SPRING_APPLICATION_NAME: auth-service
      SERVER_PORT: 8081
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/

  # Booking Making Service
  booking-db:
    image: mysql:latest
    container_name: BookingServiceDB
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: BookingServiceDB
    volumes:
      - './Microservices/BookingMakingService/Database:/docker-entrypoint-initdb.d'
    networks:
      - net
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 5
      timeout: 2s

  booking-service:
    image: booking-service
    container_name: BookingService
    build:
      context: ./Microservices/BookingMakingService
    depends_on:
      booking-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - net
    ports:
      - "8082:8082"
    environment:
      SPRING_APPLICATION_NAME: booking-service
      SERVER_PORT: 8082
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/

  # Tour Management Service
  tour-db:
    image: mysql:latest
    container_name: TourManagementDB
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: TourManagementDB
    volumes:
      - './Microservices/TourManagementService/Database:/docker-entrypoint-initdb.d'
    networks:
      - net
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      timeout: 5s

  tour-management-service:
    image: tour-management-service:latest
    container_name: TourManagementService
    build:
      context: ./Microservices/TourManagementService
    depends_on:
      tour-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - net
    ports:
      - "8083:8083"
    environment:
      SPRING_APPLICATION_NAME: tour-management-service
      SERVER_PORT: 8083
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    restart: always

  # User Management Service
  user-db:
    image: mysql:latest
    container_name: UserManagementDB
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: UserManagementDB
    volumes:
      - './Microservices/UserManagementService/Database:/docker-entrypoint-initdb.d'
    networks:
      - net
    ports:
      - "3309:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 5
      timeout: 2s

  user-management-service:
    image: user-management-service
    container_name: UserManagementService
    build:
      context: ./Microservices/UserManagementService
    depends_on:
      user-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - net
    ports:
      - "8084:8084"
    environment:
      SPRING_APPLICATION_NAME: user-management-service
      SERVER_PORT: 8084
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/  # Updated Eureka URL

networks:
  net:
    driver: bridge

